{"version":3,"file":"622.js","mappings":"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","names":["TopBannerComponent","constructor","ngOnInit","selectors","i0","TruncatePipe","transform","value","limit","completeWords","ellipsis","substring","lastIndexOf","length","pure","ReadingTimePipe","wpm","readingTimeMinutes","totalWords","trim","split","Math","ceil","BlogContentComponent","route","spinner","apiService","this","environment","Date","now","paramMap","subscribe","map","blogSlug","get","show","getBlogContent","then","content","titleSearch","TITLE_REGEX","exec","title","replace","hide","finally","doSomething","event","RegExp","ctx","routes","path","component","BlogListComponent","Promise","all","listBlogs","getBlogsMetadata","blogs","blogsMetadata","files","blogInfo","file","link","blogMetadata","info","dataLoaded","catch","console","error","BlogsRoutingModule","RouterModule","BlogsModule","ApiService","imports","PrimeNgModule","SharedUnitsModule","MarkdownModule"],"sourceRoot":"webpack:///","sources":["./src/app/components/top-banner/top-banner.component.ts","./src/app/components/top-banner/top-banner.component.html","./src/app/shared/pipes/truncate.pipe.ts","./src/app/shared/pipes/reading-time.pipe.ts","./src/app/components/blogs/blog-content/blog-content.component.ts","./src/app/components/blogs/blog-content/blog-content.component.html","./src/app/components/blogs/blog-list/blog-list.component.html","./src/app/components/blogs/blogs-routing.module.ts","./src/app/components/blogs/blog-list/blog-list.component.ts","./src/app/components/blogs/blogs.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-top-banner',\n  templateUrl: './top-banner.component.html',\n  styleUrls: ['./top-banner.component.scss']\n})\nexport class TopBannerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"d-flex w-100\">\n  <div class=\"top-banner\" style=\"background-image: url('/assets/images/deftlad-background.jpg');\"></div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'truncate',\r\n  standalone: true\r\n})\r\nexport class TruncatePipe implements PipeTransform {\r\n\r\n  transform(value: string, limit = 25, completeWords = false, ellipsis = '...'): string {\r\n    if (completeWords) {\r\n      limit = value.substring(0, limit).lastIndexOf(' ');\r\n    }\r\n    return value.length > limit ? value.substring(0, limit) + ellipsis : value;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: 'readingTime',\r\n  standalone: true\r\n})\r\nexport class ReadingTimePipe implements PipeTransform {\r\n  transform(value: string, wpm: number = 270): string | number {\r\n    let readingTimeMinutes = 1;\r\n\r\n    if (!value || !value.length) {\r\n      return readingTimeMinutes;\r\n    }\r\n\r\n    // split text by spaces to define total words\r\n    const totalWords = value.trim().split(/\\s+/g).length;\r\n\r\n    const wordsPerSecond = wpm / 60;\r\n\r\n    // define total reading time in seconds\r\n    const totalReadingTimeSeconds = totalWords / wordsPerSecond;\r\n\r\n    // define reading time\r\n    readingTimeMinutes = Math.ceil(totalReadingTimeSeconds / 60);\r\n\r\n    // return total reading time in minutes\r\n    if (readingTimeMinutes >= 1) {\r\n      return readingTimeMinutes;\r\n    } else {\r\n      // less than one minute read time\r\n      return '< 1';\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MarkdownService } from 'ngx-markdown';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ApiService } from 'src/app/shared/services/api.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-blog-content',\n  templateUrl: './blog-content.component.html',\n  styleUrls: ['./blog-content.component.scss']\n})\nexport class BlogContentComponent implements OnInit {\n  private static readonly TITLE_REGEX = new RegExp('(##__##)(.*)(##__##)');\n\n  public apiURL = environment.apiURL;\n  public blogSlug = '';\n  public articleDate = Date.now();\n  public content = '';\n  public title = '' || 'Deftlad Blogs';\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly spinner: NgxSpinnerService,\n    private readonly apiService: ApiService\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(map => {\n      this.blogSlug = map.get('blogSlug');\n\n      this.spinner.show();\n      this.apiService.getBlogContent(this.blogSlug).then(content => {\n        const titleSearch = BlogContentComponent.TITLE_REGEX.exec(content);\n        if (titleSearch && titleSearch.length === 4) {\n          this.title = titleSearch[2];\n          this.content = content.replace(titleSearch[0], '');\n        } else {\n          this.content = content;\n        }\n        this.spinner.hide();\n      }).finally(() => this.spinner.hide());\n    });\n  }\n\n  public doSomething(event: any): void {\n    this.content = this.content || event;\n    const titleSearch = BlogContentComponent.TITLE_REGEX.exec(this.content);\n    if (titleSearch && titleSearch.length === 4) {\n      this.title = titleSearch[2];\n      this.content = this.content.replace(titleSearch[2], '');\n    }\n  }\n}\n","<div class=\"col-8 mx-auto\">\n  <div class=\"py-4\"></div>\n  <app-top-banner class=\"mt-4\"></app-top-banner>\n  <h1 class=\"mb-0 mt-4 fw-bold\">{{ title }}</h1>\n  <div class=\"content-wrapper d-flex justify-content-between\">\n    <div class=\"content col-9 pe-4 mt-4\">\n      <div class=\"my-3 flex align-items-center text-end w-100\">\n        <span class=\"me-3 fw-light text-secondary\">{{ articleDate | date }}</span>\n        <span class=\"text-secondary fw-light fs-7\">{{ content | readingTime : 300 }} min read</span>\n      </div>\n      <markdown emoji ngPreserveWhitespaces (load)=\"doSomething($event)\" [data]=\"content\">\n      </markdown>\n    </div>\n    <div class=\"content-info col-3 ps-4 d-flex flex-column justify-content-start mt-4\">\n      <span class=\"text-warning fw-bold mb-4 ms-auto fs-3\">Related Topics</span>\n      <a class=\"d-block text-primary text-truncate text-end mt-2 ms-auto\">Set up Docker on your PC</a>\n      <a class=\"d-block text-primary text-truncate text-end mt-2 ms-auto\"\n        data-toggle=\"tooltip\"\n        data-placement=\"top\"\n        title=\"Clean Code: A Subjective Guide for better programming\">\n        {{'Clean Code: A Subjective Guide for better programming' | truncate : 25 : true}}\n      </a>\n      <a class=\"d-block text-primary text-truncate text-end mt-2 ms-auto\">Getting Things Done!</a>\n      <a class=\"d-block text-primary text-truncate text-end mt-2 ms-auto\">{{'Setup Your Machine: Java' | truncate : 25 : true}}</a>\n    </div>\n  </div>\n</div>\n","<div class=\"col-8 mx-auto mt-4\">\n  <h1 class=\"text-dark fw-bold text-uppercase\">Blogs</h1>\n  <p-divider></p-divider>\n  <div class=\"col-12 d-flex flex-wrap justify-content-start\">\n    <a *ngFor=\"let blog of blogs\" href=\"/blogs/blog/{{ blog.link }}\"\n      class=\"blog-card col-3 rounded rounded-4 border p-4 border-lgrey d-flex flex-column\">\n      <p class=\"fs-3 text-primary fw-bold\">{{ blogMetadata[blog.file].title }}</p>\n      <p-divider></p-divider>\n      <div>\n        <span class=\"text-secondary\">\n          {{ blogMetadata[blog.file].summary }}\n        </span>\n      </div>\n    </a>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BlogContentComponent } from './blog-content/blog-content.component';\r\nimport { BlogListComponent } from './blog-list/blog-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BlogListComponent\r\n  },\r\n  {\r\n    path: 'blog/:blogSlug',\r\n    component: BlogContentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BlogsRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ApiService } from 'src/app/shared/services/api.service';\n\n@Component({\n  selector: 'app-blog-list',\n  templateUrl: './blog-list.component.html',\n  styleUrls: ['./blog-list.component.scss']\n})\nexport class BlogListComponent implements OnInit {\n\n  public dataLoaded = false;\n\n  public blogs: any[] = [];\n  public blogMetadata: Record<string, any> = {};\n\n  constructor(\n    private readonly apiService: ApiService,\n    private readonly spinner: NgxSpinnerService\n  ) { }\n\n  ngOnInit(): void {\n    this.spinner.show();\n    Promise.all([this.apiService.listBlogs(), this.apiService.getBlogsMetadata()])\n      .then(([blogs, blogsMetadata]) => {\n        this.blogs = (blogs as any).files.map(blogInfo => ({\n          ...blogInfo,\n          file: blogInfo.path.replace(/content\\/BLOG\\//g, ''),\n          link: blogInfo.path.replace(/content\\/BLOG\\//g, '').replace('.md', '')\n        }));\n        this.blogMetadata = (blogsMetadata as any).info;\n        this.dataLoaded = true;\n        this.spinner.hide();\n      })\n      .catch(console.error)\n      .finally(() => {\n        this.spinner.hide();\n        this.dataLoaded = true;\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MarkdownModule } from 'ngx-markdown';\r\nimport { PrimeNgModule } from 'src/app/primeng.module';\r\nimport { BlogContentComponent } from './blog-content/blog-content.component';\r\nimport { BlogListComponent } from './blog-list/blog-list.component';\r\nimport { TopBannerComponent } from '../top-banner/top-banner.component';\r\nimport { BlogsRoutingModule } from './blogs-routing.module';\r\nimport { BlogsComponent } from './blogs.component';\r\nimport { SharedUnitsModule } from 'src/app/shared/shared-units.module';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BlogContentComponent,\r\n    BlogsComponent,\r\n    BlogListComponent,\r\n    TopBannerComponent\r\n  ],\r\n  imports: [\r\n    RouterModule,\r\n    BlogsRoutingModule,\r\n    PrimeNgModule,\r\n    SharedUnitsModule,\r\n    MarkdownModule.forChild(),\r\n  ],\r\n  providers: [\r\n    ApiService\r\n  ]\r\n})\r\nexport class BlogsModule { }\r\n"],"x_google_ignoreList":[]}